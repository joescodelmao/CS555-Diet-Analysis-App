<h1>Upload or Take a Photo of Your Meal</h1>

<!-- Buttons to choose mode -->
<div style="margin-bottom: 15px;">
  <button type="button" id="openCameraBtn">📸 Use Camera</button>
  <button type="button" id="chooseFileBtn">📁 Upload Photo</button>
</div>

<!-- Camera section (hidden until user clicks "Use Camera") -->
<div id="cameraContainer" style="display:none; text-align:center;">
  <video id="video" width="300" height="225" autoplay playsinline></video><br>
  <button id="captureBtn">📷 Take Photo</button>
  <canvas id="canvas" width="300" height="225" style="display:none;"></canvas>
</div>

<!-- Upload form -->
<form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data" style="margin-top:15px;">
  <input type="file" name="mealImage" id="mealImage" accept="image/*" capture="environment" style="display:none;" required>
  <input type="hidden" name="capturedImage" id="capturedImage">
  <button type="submit" id="submitBtn" style="display:none;">Upload</button>
</form>

<!-- Preview section -->
<div id="previewContainer" style="display:none; text-align:center;">
  <h3>Preview:</h3>
  <img id="previewImage" src="#" alt="Meal preview" style="max-width:300px; border-radius:10px;">
</div>

<script>
  const openCameraBtn = document.getElementById("openCameraBtn");
  const chooseFileBtn = document.getElementById("chooseFileBtn");
  const cameraContainer = document.getElementById("cameraContainer");
  const video = document.getElementById("video");
  const canvas = document.getElementById("canvas");
  const captureBtn = document.getElementById("captureBtn");
  const mealImage = document.getElementById("mealImage");
  const previewContainer = document.getElementById("previewContainer");
  const previewImage = document.getElementById("previewImage");
  const submitBtn = document.getElementById("submitBtn");
  const capturedImage = document.getElementById("capturedImage");

  // Open camera
  openCameraBtn.addEventListener("click", async () => {
    cameraContainer.style.display = "block";
    submitBtn.style.display = "none";
    try {
      const stream = await navigator.mediaDevices.getUserMedia({ video: true });
      video.srcObject = stream;
    } catch (err) {
      alert("Camera access denied or not available.");
    }
  });

  // Capture photo from video
  captureBtn.addEventListener("click", () => {
    canvas.getContext("2d").drawImage(video, 0, 0, canvas.width, canvas.height);
    const imageData = canvas.toDataURL("image/png");
    previewImage.src = imageData;
    previewContainer.style.display = "block";
    submitBtn.style.display = "block";
    capturedImage.value = imageData;
  });

  // Handle file uploads manually
  chooseFileBtn.addEventListener("click", () => {
    mealImage.click();
  });

  mealImage.addEventListener("change", (event) => {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        previewImage.src = e.target.result;
        previewContainer.style.display = "block";
        submitBtn.style.display = "block";
      };
      reader.readAsDataURL(file);
    }
  });
</script>
